{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BookmarkForm","props","state","url","title","tag","handleInput","bind","handleAddBlogPost","event","this","setState","target","name","value","preventDefault","addBlogPost","onSubmit","type","placeholder","onChange","Component","BlogList","blogs","map","blog","href","App","blogList","filter","push","tags","tagLinks","Set","index","onClick","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a7d3941.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n\n\nclass BookmarkForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      title: '',\n      tag: ''\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleAddBlogPost = this.handleAddBlogPost.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n\n  }\n\n  handleAddBlogPost(event){\n  event.preventDefault();\n  this.props.addBlogPost({\n    url: this.state.url,\n    title: this.state.title,\n    tag: this.state.tag,\n  })\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleAddBlogPost}>\n        <input type=\"url\" name=\"url\" placeholder=\"Enter the blog's url\" value={this.state.url} onChange={this.handleInput}/>\n        <input type=\"text\" name=\"title\" placeholder=\"Enter the blog's title\" value={this.state.title} onChange={this.handleInput}/>\n        <input type=\"text\" name=\"tag\" placeholder=\"Enter #tag\" value={this.state.tag} onChange={this.handleInput}/>\n        <button type='submit'>Add Blog Post</button>\n      </form>\n    )\n  }\n}\n\nfunction BlogList(props) {\n  const blogs = props.blogs.map((blog) =>(\n    <li key={blog.url}>\n      <div>\n        <h3><a href={blog.url}>{blog.title}</a></h3>\n      </div>\n    </li>\n  ));\n  return(\n    <ul>{blogs}</ul>\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blogList: [],\n      filter: null,\n    }\n    this.addBlogPost = this.addBlogPost.bind(this)\n  }\n\n  addBlogPost(blog){\n    const blogList = [ ...this.state.blogList];\n    blogList.push(blog);\n    this.setState( {blogList} )\n  }\n\n  componentDidMount() {\n    const blogList = [\n      {url: 'https://www.huffpost.com/', title: 'Huffington Post', tag: '', tag: 'business'},\n      {url: \"https://boingboing.net/\", title: 'Boing Boing', tag: 'adventure'},\n      {url: \"https://techcrunch.com/\", title: 'Techcrunch', tag: 'technology'},\n    ];\n    this.setState({ blogList })\n  }\n\n  render() {\n    const tags = this.state.blogList.map(blog => blog.tag);\n    const groupedTags = [ ...new Set(tags)];\n    const tagLinks = groupedTags.map((tag, index)=> <button key={index} onClick={() => this.setState({filter: tag})}>{tag.toUpperCase()}</button>)\n    const blogList = this.state.filter ? this.state.blogList.filter(blog => blog.tag === this.state.filter) : this.state.blogList;\n    return (\n      <>\n      {tagLinks}\n      <button onClick={() => this.setState( {filter: null}) }>ALL</button>\n      <BookmarkForm addBlogPost={this.addBlogPost}/>\n      <BlogList blogs={blogList}/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}